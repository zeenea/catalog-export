import org.asciidoctor.gradle.jvm.AsciidoctorTask

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.4/userguide/tutorial_java_projects.html
 */

group = "com.zeenea.client.example"
version = file("version.txt").readText().trim()

plugins {
    java
    application
    id("org.asciidoctor.jvm.convert") version "2.4.0"
}

repositories {
    jcenter()
    maven {
        name = "zeenea-releases"
        url = uri("https://zeenea-maven-public.s3.amazonaws.com/")
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

distributions {
    main {
        contents {
            from(tasks.getByName<AsciidoctorTask>("asciidoctor")) {
                into ("docs")
            }
        }
    }
}

tasks.withType<JavaCompile> {
    with(options) {
        encoding = "UTF-8"
        compilerArgs.add("-Xlint:unchecked")
    }
}

tasks.withType<Tar> {
    compression = Compression.GZIP
    archiveExtension.set("tar.gz")
}

tasks.getByName<AsciidoctorTask>("asciidoctor") {
    sources(delegateClosureOf<PatternSet> { include(project.name + ".adoc") })
    attributes = mapOf("version" to project.version)
}

dependencies {
    implementation(group = "com.zeenea.client", name = "zeenea-java-sdk", version = "0.3")
    implementation(group = "com.beust", name = "jcommander", version = "1.72")
    implementation(group = "com.google.guava", name = "guava", version = "28.1-jre")
    implementation(group = "org.apache.poi", name = "poi-ooxml", version = "4.1.0")

    // Json
    val jacksonVersion = "2.9.9"
    val jacksonCoreVersion = "$jacksonVersion.3"

    implementation(group = "com.fasterxml.jackson.core", name = "jackson-annotations", version = "2.9.0")
    implementation(group = "com.fasterxml.jackson.core", name = "jackson-databind", version = jacksonCoreVersion)
    implementation(group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version = jacksonVersion)
    implementation(group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jdk8", version = jacksonVersion)
    implementation(group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version = jacksonVersion)
    implementation(group = "com.jayway.jsonpath", name = "json-path", version = "2.4.0")

    // Logs
    implementation(group = "org.slf4j", name = "slf4j-api", version = "1.7.28")
    runtimeOnly(group = "ch.qos.logback", name = "logback-classic", version = "1.2.3")
    runtimeOnly(group = "org.slf4j", name = "jcl-over-slf4j", version = "1.7.28")

    // Use JUnit Jupiter API for testing.
    val junitVersion = "5.4.2"
    testImplementation(group = "org.junit.jupiter", name = "junit-jupiter-api", version = junitVersion)
    testRuntimeOnly(group = "org.junit.jupiter", name = "junit-jupiter-engine", version = junitVersion)
}

application {
    // Define the main class for the application
    mainClassName = "com.zeenea.cli.export.ExportCatalog"
}

val test by tasks.getting(Test::class) {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
